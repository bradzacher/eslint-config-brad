// this file is auto-generated. Run `make regenerate-types` to regenerate it.

import { AdjacentOverloadSignatures } from '../@typescript-eslint/adjacent-overload-signatures';
import { ArrayType } from '../@typescript-eslint/array-type';
import { AwaitThenable } from '../@typescript-eslint/await-thenable';
import { BanTsComment } from '../@typescript-eslint/ban-ts-comment';
import { BanTypes } from '../@typescript-eslint/ban-types';
import { BraceStyle } from '../@typescript-eslint/brace-style';
import { ClassLiteralPropertyStyle } from '../@typescript-eslint/class-literal-property-style';
import { CommaSpacing } from '../@typescript-eslint/comma-spacing';
import { ConsistentTypeAssertions } from '../@typescript-eslint/consistent-type-assertions';
import { ConsistentTypeDefinitions } from '../@typescript-eslint/consistent-type-definitions';
import { DefaultParamLast } from '../@typescript-eslint/default-param-last';
import { DotNotation } from '../@typescript-eslint/dot-notation';
import { ExplicitFunctionReturnType } from '../@typescript-eslint/explicit-function-return-type';
import { ExplicitMemberAccessibility } from '../@typescript-eslint/explicit-member-accessibility';
import { ExplicitModuleBoundaryTypes } from '../@typescript-eslint/explicit-module-boundary-types';
import { FuncCallSpacing } from '../@typescript-eslint/func-call-spacing';
import { Indent } from '../@typescript-eslint/indent';
import { InitDeclarations } from '../@typescript-eslint/init-declarations';
import { KeywordSpacing } from '../@typescript-eslint/keyword-spacing';
import { LinesBetweenClassMembers } from '../@typescript-eslint/lines-between-class-members';
import { MemberDelimiterStyle } from '../@typescript-eslint/member-delimiter-style';
import { MemberOrdering } from '../@typescript-eslint/member-ordering';
import { MethodSignatureStyle } from '../@typescript-eslint/method-signature-style';
import { NamingConvention } from '../@typescript-eslint/naming-convention';
import { NoArrayConstructor } from '../@typescript-eslint/no-array-constructor';
import { NoBaseToString } from '../@typescript-eslint/no-base-to-string';
import { NoDupeClassMembers } from '../@typescript-eslint/no-dupe-class-members';
import { NoDynamicDelete } from '../@typescript-eslint/no-dynamic-delete';
import { NoEmptyFunction } from '../@typescript-eslint/no-empty-function';
import { NoEmptyInterface } from '../@typescript-eslint/no-empty-interface';
import { NoExplicitAny } from '../@typescript-eslint/no-explicit-any';
import { NoExtraNonNullAssertion } from '../@typescript-eslint/no-extra-non-null-assertion';
import { NoExtraParens } from '../@typescript-eslint/no-extra-parens';
import { NoExtraSemi } from '../@typescript-eslint/no-extra-semi';
import { NoExtraneousClass } from '../@typescript-eslint/no-extraneous-class';
import { NoFloatingPromises } from '../@typescript-eslint/no-floating-promises';
import { NoForInArray } from '../@typescript-eslint/no-for-in-array';
import { NoImpliedEval } from '../@typescript-eslint/no-implied-eval';
import { NoInferrableTypes } from '../@typescript-eslint/no-inferrable-types';
import { NoInvalidThis } from '../@typescript-eslint/no-invalid-this';
import { NoInvalidVoidType } from '../@typescript-eslint/no-invalid-void-type';
import { NoMagicNumbers } from '../@typescript-eslint/no-magic-numbers';
import { NoMisusedNew } from '../@typescript-eslint/no-misused-new';
import { NoMisusedPromises } from '../@typescript-eslint/no-misused-promises';
import { NoNamespace } from '../@typescript-eslint/no-namespace';
import { NoNonNullAssertedOptionalChain } from '../@typescript-eslint/no-non-null-asserted-optional-chain';
import { NoNonNullAssertion } from '../@typescript-eslint/no-non-null-assertion';
import { NoParameterProperties } from '../@typescript-eslint/no-parameter-properties';
import { NoRequireImports } from '../@typescript-eslint/no-require-imports';
import { NoThisAlias } from '../@typescript-eslint/no-this-alias';
import { NoThrowLiteral } from '../@typescript-eslint/no-throw-literal';
import { NoTypeAlias } from '../@typescript-eslint/no-type-alias';
import { NoUnnecessaryBooleanLiteralCompare } from '../@typescript-eslint/no-unnecessary-boolean-literal-compare';
import { NoUnnecessaryCondition } from '../@typescript-eslint/no-unnecessary-condition';
import { NoUnnecessaryQualifier } from '../@typescript-eslint/no-unnecessary-qualifier';
import { NoUnnecessaryTypeArguments } from '../@typescript-eslint/no-unnecessary-type-arguments';
import { NoUnnecessaryTypeAssertion } from '../@typescript-eslint/no-unnecessary-type-assertion';
import { NoUnsafeAssignment } from '../@typescript-eslint/no-unsafe-assignment';
import { NoUnsafeCall } from '../@typescript-eslint/no-unsafe-call';
import { NoUnsafeMemberAccess } from '../@typescript-eslint/no-unsafe-member-access';
import { NoUnsafeReturn } from '../@typescript-eslint/no-unsafe-return';
import { NoUnusedExpressions } from '../@typescript-eslint/no-unused-expressions';
import { NoUnusedVars } from '../@typescript-eslint/no-unused-vars';
import { NoUnusedVarsExperimental } from '../@typescript-eslint/no-unused-vars-experimental';
import { NoUseBeforeDefine } from '../@typescript-eslint/no-use-before-define';
import { NoUselessConstructor } from '../@typescript-eslint/no-useless-constructor';
import { NoVarRequires } from '../@typescript-eslint/no-var-requires';
import { PreferAsConst } from '../@typescript-eslint/prefer-as-const';
import { PreferForOf } from '../@typescript-eslint/prefer-for-of';
import { PreferFunctionType } from '../@typescript-eslint/prefer-function-type';
import { PreferIncludes } from '../@typescript-eslint/prefer-includes';
import { PreferNamespaceKeyword } from '../@typescript-eslint/prefer-namespace-keyword';
import { PreferNullishCoalescing } from '../@typescript-eslint/prefer-nullish-coalescing';
import { PreferOptionalChain } from '../@typescript-eslint/prefer-optional-chain';
import { PreferReadonly } from '../@typescript-eslint/prefer-readonly';
import { PreferReadonlyParameterTypes } from '../@typescript-eslint/prefer-readonly-parameter-types';
import { PreferReduceTypeParameter } from '../@typescript-eslint/prefer-reduce-type-parameter';
import { PreferRegexpExec } from '../@typescript-eslint/prefer-regexp-exec';
import { PreferStringStartsEndsWith } from '../@typescript-eslint/prefer-string-starts-ends-with';
import { PreferTsExpectError } from '../@typescript-eslint/prefer-ts-expect-error';
import { PromiseFunctionAsync } from '../@typescript-eslint/promise-function-async';
import { Quotes } from '../@typescript-eslint/quotes';
import { RequireArraySortCompare } from '../@typescript-eslint/require-array-sort-compare';
import { RequireAwait } from '../@typescript-eslint/require-await';
import { RestrictPlusOperands } from '../@typescript-eslint/restrict-plus-operands';
import { RestrictTemplateExpressions } from '../@typescript-eslint/restrict-template-expressions';
import { ReturnAwait } from '../@typescript-eslint/return-await';
import { Semi } from '../@typescript-eslint/semi';
import { SpaceBeforeFunctionParen } from '../@typescript-eslint/space-before-function-paren';
import { StrictBooleanExpressions } from '../@typescript-eslint/strict-boolean-expressions';
import { SwitchExhaustivenessCheck } from '../@typescript-eslint/switch-exhaustiveness-check';
import { TripleSlashReference } from '../@typescript-eslint/triple-slash-reference';
import { TypeAnnotationSpacing } from '../@typescript-eslint/type-annotation-spacing';
import { Typedef } from '../@typescript-eslint/typedef';
import { UnboundMethod } from '../@typescript-eslint/unbound-method';
import { UnifiedSignatures } from '../@typescript-eslint/unified-signatures';

interface TypescriptEslint {
  '@typescript-eslint/adjacent-overload-signatures': AdjacentOverloadSignatures;
  '@typescript-eslint/array-type': ArrayType;
  '@typescript-eslint/await-thenable': AwaitThenable;
  '@typescript-eslint/ban-ts-comment': BanTsComment;
  '@typescript-eslint/ban-types': BanTypes;
  '@typescript-eslint/brace-style': BraceStyle;
  '@typescript-eslint/class-literal-property-style': ClassLiteralPropertyStyle;
  '@typescript-eslint/comma-spacing': CommaSpacing;
  '@typescript-eslint/consistent-type-assertions': ConsistentTypeAssertions;
  '@typescript-eslint/consistent-type-definitions': ConsistentTypeDefinitions;
  '@typescript-eslint/default-param-last': DefaultParamLast;
  '@typescript-eslint/dot-notation': DotNotation;
  '@typescript-eslint/explicit-function-return-type': ExplicitFunctionReturnType;
  '@typescript-eslint/explicit-member-accessibility': ExplicitMemberAccessibility;
  '@typescript-eslint/explicit-module-boundary-types': ExplicitModuleBoundaryTypes;
  '@typescript-eslint/func-call-spacing': FuncCallSpacing;
  '@typescript-eslint/indent': Indent;
  '@typescript-eslint/init-declarations': InitDeclarations;
  '@typescript-eslint/keyword-spacing': KeywordSpacing;
  '@typescript-eslint/lines-between-class-members': LinesBetweenClassMembers;
  '@typescript-eslint/member-delimiter-style': MemberDelimiterStyle;
  '@typescript-eslint/member-ordering': MemberOrdering;
  '@typescript-eslint/method-signature-style': MethodSignatureStyle;
  '@typescript-eslint/naming-convention': NamingConvention;
  '@typescript-eslint/no-array-constructor': NoArrayConstructor;
  '@typescript-eslint/no-base-to-string': NoBaseToString;
  '@typescript-eslint/no-dupe-class-members': NoDupeClassMembers;
  '@typescript-eslint/no-dynamic-delete': NoDynamicDelete;
  '@typescript-eslint/no-empty-function': NoEmptyFunction;
  '@typescript-eslint/no-empty-interface': NoEmptyInterface;
  '@typescript-eslint/no-explicit-any': NoExplicitAny;
  '@typescript-eslint/no-extra-non-null-assertion': NoExtraNonNullAssertion;
  '@typescript-eslint/no-extra-parens': NoExtraParens;
  '@typescript-eslint/no-extra-semi': NoExtraSemi;
  '@typescript-eslint/no-extraneous-class': NoExtraneousClass;
  '@typescript-eslint/no-floating-promises': NoFloatingPromises;
  '@typescript-eslint/no-for-in-array': NoForInArray;
  '@typescript-eslint/no-implied-eval': NoImpliedEval;
  '@typescript-eslint/no-inferrable-types': NoInferrableTypes;
  '@typescript-eslint/no-invalid-this': NoInvalidThis;
  '@typescript-eslint/no-invalid-void-type': NoInvalidVoidType;
  '@typescript-eslint/no-magic-numbers': NoMagicNumbers;
  '@typescript-eslint/no-misused-new': NoMisusedNew;
  '@typescript-eslint/no-misused-promises': NoMisusedPromises;
  '@typescript-eslint/no-namespace': NoNamespace;
  '@typescript-eslint/no-non-null-asserted-optional-chain': NoNonNullAssertedOptionalChain;
  '@typescript-eslint/no-non-null-assertion': NoNonNullAssertion;
  '@typescript-eslint/no-parameter-properties': NoParameterProperties;
  '@typescript-eslint/no-require-imports': NoRequireImports;
  '@typescript-eslint/no-this-alias': NoThisAlias;
  '@typescript-eslint/no-throw-literal': NoThrowLiteral;
  '@typescript-eslint/no-type-alias': NoTypeAlias;
  '@typescript-eslint/no-unnecessary-boolean-literal-compare': NoUnnecessaryBooleanLiteralCompare;
  '@typescript-eslint/no-unnecessary-condition': NoUnnecessaryCondition;
  '@typescript-eslint/no-unnecessary-qualifier': NoUnnecessaryQualifier;
  '@typescript-eslint/no-unnecessary-type-arguments': NoUnnecessaryTypeArguments;
  '@typescript-eslint/no-unnecessary-type-assertion': NoUnnecessaryTypeAssertion;
  '@typescript-eslint/no-unsafe-assignment': NoUnsafeAssignment;
  '@typescript-eslint/no-unsafe-call': NoUnsafeCall;
  '@typescript-eslint/no-unsafe-member-access': NoUnsafeMemberAccess;
  '@typescript-eslint/no-unsafe-return': NoUnsafeReturn;
  '@typescript-eslint/no-unused-expressions': NoUnusedExpressions;
  '@typescript-eslint/no-unused-vars': NoUnusedVars;
  '@typescript-eslint/no-unused-vars-experimental': NoUnusedVarsExperimental;
  '@typescript-eslint/no-use-before-define': NoUseBeforeDefine;
  '@typescript-eslint/no-useless-constructor': NoUselessConstructor;
  '@typescript-eslint/no-var-requires': NoVarRequires;
  '@typescript-eslint/prefer-as-const': PreferAsConst;
  '@typescript-eslint/prefer-for-of': PreferForOf;
  '@typescript-eslint/prefer-function-type': PreferFunctionType;
  '@typescript-eslint/prefer-includes': PreferIncludes;
  '@typescript-eslint/prefer-namespace-keyword': PreferNamespaceKeyword;
  '@typescript-eslint/prefer-nullish-coalescing': PreferNullishCoalescing;
  '@typescript-eslint/prefer-optional-chain': PreferOptionalChain;
  '@typescript-eslint/prefer-readonly': PreferReadonly;
  '@typescript-eslint/prefer-readonly-parameter-types': PreferReadonlyParameterTypes;
  '@typescript-eslint/prefer-reduce-type-parameter': PreferReduceTypeParameter;
  '@typescript-eslint/prefer-regexp-exec': PreferRegexpExec;
  '@typescript-eslint/prefer-string-starts-ends-with': PreferStringStartsEndsWith;
  '@typescript-eslint/prefer-ts-expect-error': PreferTsExpectError;
  '@typescript-eslint/promise-function-async': PromiseFunctionAsync;
  '@typescript-eslint/quotes': Quotes;
  '@typescript-eslint/require-array-sort-compare': RequireArraySortCompare;
  '@typescript-eslint/require-await': RequireAwait;
  '@typescript-eslint/restrict-plus-operands': RestrictPlusOperands;
  '@typescript-eslint/restrict-template-expressions': RestrictTemplateExpressions;
  '@typescript-eslint/return-await': ReturnAwait;
  '@typescript-eslint/semi': Semi;
  '@typescript-eslint/space-before-function-paren': SpaceBeforeFunctionParen;
  '@typescript-eslint/strict-boolean-expressions': StrictBooleanExpressions;
  '@typescript-eslint/switch-exhaustiveness-check': SwitchExhaustivenessCheck;
  '@typescript-eslint/triple-slash-reference': TripleSlashReference;
  '@typescript-eslint/type-annotation-spacing': TypeAnnotationSpacing;
  '@typescript-eslint/typedef': Typedef;
  '@typescript-eslint/unbound-method': UnboundMethod;
  '@typescript-eslint/unified-signatures': UnifiedSignatures;
}

export { TypescriptEslint };
