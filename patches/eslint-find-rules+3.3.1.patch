diff --git a/node_modules/eslint-find-rules/dist/lib/rule-finder.js b/node_modules/eslint-find-rules/dist/lib/rule-finder.js
index e717569..8050ea6 100644
--- a/node_modules/eslint-find-rules/dist/lib/rule-finder.js
+++ b/node_modules/eslint-find-rules/dist/lib/rule-finder.js
@@ -27,7 +27,7 @@ function _getConfig(configFile) {
     // Point to the particular config
     configFile: configFile
   });
-  return cliEngine.getConfigForFile();
+  return cliEngine.getConfigForFile(configFile);
 }
 
 function _getCurrentNamesRules(config) {
@@ -35,20 +35,31 @@ function _getCurrentNamesRules(config) {
 }
 
 function _normalizePluginName(name) {
-  var scopedRegex = /(@[^/]+)\/(.+)/;
-  var match = scopedRegex.exec(name);
+    const scopedRegex = /(@[^/]+)(\/(.+))?/;
+    const match = scopedRegex.exec(name);
+
+    /* istanbul ignore if: cannot test this branch in eslint <5  */
+    if (match) {
+      if (match[3]) {
+        // @scoped/name => @scope/eslint-plugin-name
+        return {
+          module: `${match[1]}/eslint-plugin-${match[3]}`,
+          prefix: `${match[1]}/${match[3]}`
+        };
+      }
+
+      // @scoped => @scope/eslint-plugin
+      return {
+        module: `${match[1]}/eslint-plugin`,
+        prefix: match[1]
+      };
+    }
 
-  if (match) {
+    // Name => eslint-plugin-name
     return {
-      module: match[1] + '/eslint-plugin-' + match[2],
-      prefix: match[2]
+      module: `eslint-plugin-${name}`,
+      prefix: name
     };
-  }
-
-  return {
-    module: 'eslint-plugin-' + name,
-    prefix: name
-  };
 }
 
 function _isDeprecated(rule) {
diff --git a/node_modules/eslint-find-rules/src/lib/rule-finder.js b/node_modules/eslint-find-rules/src/lib/rule-finder.js
index 3e84c05..fcf65e1 100644
--- a/node_modules/eslint-find-rules/src/lib/rule-finder.js
+++ b/node_modules/eslint-find-rules/src/lib/rule-finder.js
@@ -23,28 +23,38 @@ function _getConfig(configFile) {
     // Point to the particular config
     configFile
   });
-  return cliEngine.getConfigForFile();
+  return cliEngine.getConfigForFile(configFile);
 }
 
 function _getCurrentNamesRules(config) {
   return Object.keys(config.rules);
 }
-
 function _normalizePluginName(name) {
-  const scopedRegex = /(@[^/]+)\/(.+)/;
-  const match = scopedRegex.exec(name);
+    const scopedRegex = /(@[^/]+)(\/(.+))?/;
+    const match = scopedRegex.exec(name);
+
+    /* istanbul ignore if: cannot test this branch in eslint <5  */
+    if (match) {
+      if (match[3]) {
+        // @scoped/name => @scope/eslint-plugin-name
+        return {
+          module: `${match[1]}/eslint-plugin-${match[3]}`,
+          prefix: `${match[1]}/${match[3]}`
+        };
+      }
+
+      // @scoped => @scope/eslint-plugin
+      return {
+        module: `${match[1]}/eslint-plugin`,
+        prefix: match[1]
+      };
+    }
 
-  if (match) {
+    // Name => eslint-plugin-name
     return {
-      module: `${match[1]}/eslint-plugin-${match[2]}`,
-      prefix: match[2]
+      module: `eslint-plugin-${name}`,
+      prefix: name
     };
-  }
-
-  return {
-    module: `eslint-plugin-${name}`,
-    prefix: name
-  };
 }
 
 function _isDeprecated(rule) {
